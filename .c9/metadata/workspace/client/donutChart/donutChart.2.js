{"filter":false,"title":"donutChart.2.js","tooltip":"/client/donutChart/donutChart.2.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":155,"column":0}},"nl":"\n","lines":["angular.module('testDistribution', [])","    .directive('donutChart', function() {","        return {","","            restrict: 'EA',","            scope: {","                dataValue: '='","            },","","            link: function(scope, element, attrs) {","            function doit(){","                //Donut chart example","nv.addGraph(function() {","  var chart = nv.models.pieChart()","      .x(function(d) { return d.label })","      .y(function(d) { return d.value })","      .showLabels(true)     //Display pie labels","      .labelThreshold(.05)  //Configure the minimum slice size for labels to show up","      .labelType(\"percent\") //Configure what type of data to show in the label. Can be \"key\", \"value\" or \"percent\"","      .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!","      .donutRatio(0.35)     //Configure how big you want the donut hole size to be.","      ;","","    d3.select(\"#chart2 svg\")","        .datum(exampleData())","        .transition().duration(350)","        .call(chart);","","  return chart;","});","","//Pie chart example data. Note how there is only a single array of key-value pairs.","function exampleData() {","  return  [","      { ","        \"label\": \"One\",","        \"value\" : 29.765957771107","      } , ","      { ","        \"label\": \"Two\",","        \"value\" : 0","      } , ","      { ","        \"label\": \"Three\",","        \"value\" : 32.807804682612","      } , ","      { ","        \"label\": \"Four\",","        \"value\" : 196.45946739256","      } , ","      { ","        \"label\": \"Five\",","        \"value\" : 0.19434030906893","      } , ","      { ","        \"label\": \"Six\",","        \"value\" : 98.079782601442","      } , ","      { ","        \"label\": \"Seven\",","        \"value\" : 13.925743130903","      } , ","      { ","        \"label\": \"Eight\",","        \"value\" : 5.1387322875705","      }","    ];","}","","            }","            doit();","","                function donutChart(parent) {","                    var _height = 500,","                        _width = 500,","                        _radius = 200,","                        _innrRadius = _radius - 100,","                        _data = [30,30],","","                        _color = d3.scale.ordinal()","                        .range(['red', 'blue', 'green']);","","","                    function component() {","                        var canvas = d3.select(parent).append('svg')","                            .attr('width', _height)","                            .attr('height', _width);","                             ","","","                        var group = canvas.append('g')","                            .attr('trasform', 'translate(300,300)');","","","","                        var arc = d3.svg.arc()","                            .innerRadius(_innrRadius)","                            .outerRadius(_radius);","","                        var pie = d3.layout.pie()","                            .value(function(d) {","                                return d;","                            });","","                        var arcs = group.selectAll('.arc')","                            .data(pie(_data))","                            .enter()","                            .append('g').attr('class', 'arc');","","","                        arcs.append('path')","                            .attr('d', arc);","                    };","","","","","","","","                    component.render = function() {","                        // do somthing","                        component();","                        return component;","","","                    };","","                    component.data = function(val) {","                        if (!arguments.length) {","                            return _data;","                        }","                        _data = val;","                        return component;","","","                    };","","","","                    return component;","","","","","                }","","","                donutChart(element[0])","                      .data([50, 40])","                      .render();","            }","        };","","    });"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":114,"column":0}},"lines":["<!DOCTYPE html>","<html lang=\"en\">","<head>","    <meta charset=\"utf-8\">","    <title>D3: Pie layout</title>","    <script type=\"text/javascript\" src=\"../APP/d3/d3.js\"></script>","    <style type=\"text/css\">","","        text {","            font-family: sans-serif;","            font-size: 12px;","            fill: white;","        }","","    </style>","</head>","<body>","<script type=\"text/javascript\">","","    var","            width = 300,","            height = 300,","            radius = Math.min(width, height) / 2,","            labelr = radius + 30, // radius for label anchor","","            color = d3.scale.category20(),","","            pie = d3.layout.pie().sort(null),","","            arc = d3.svg.arc()","                    .innerRadius(width / 2)","                    .outerRadius(width / 4),","","            svg = d3.select(\"body\")","                    .append(\"svg\")","                    .attr(\"width\", width)","                    .attr(\"height\", height)","                    .append(\"g\")","                    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"),","","            data = [","                [25, 25, 25, 25, 0, 0, 0],","                [50, 10, 20, 20, 0, 0, 0],","                [25, 25, 10, 40, 60, 0, 0],","                [10, 15, 10, 75, 34, 56, 34],","                [80, 10, 10, 0, 3, 70, 42],","                [30, 30, 30, 10, 0, 0, 0]","            ],","","            g = svg","                    .datum(data[0])","                    .selectAll(\"path\")","                    .data(pie)","                    .enter(),","","            path = g.append(\"path\")","                    .attr(\"fill\", function(d, i) {","                        return color(i);","                    })","                    .attr(\"d\", arc)","                    .each(function(d) {","                        this._current = d;","                    }),","","","            texts = g.append(\"text\")","                    .attr(\"transform\", function(d) {","                        return \"translate(\" + arc.centroid(d) + \")\";","                    })","                    .attr(\"dy\", \".35em\")","                    .style(\"text-anchor\", \"middle\")","                    .text(function(d) {","                        return d.data;","                    });","","    function change() {","        clearInterval(interval);","        var i = ++index % data.length;","        svg.datum(data[i])","                .selectAll(\"path\")","                .data(pie)","                .enter();","","        g.selectAll(\"text\")","                .enter()","                .attr(\"transform\", function(d) {","                    return \"translate(\" + arc.centroid(d) + \")\";","                })","        path = path.data(pie); // compute the new angles","","        path.transition().duration(1000).attrTween(\"d\", arcTween);","","      //  interval = setTimeout(change, 1500);","    }","","","    var interval, index = 0;","    interval = setTimeout(change, 1000);","","    // Store the displayed angles in _current.","    // Then, interpolate from _current to the new angles.","    // During the transition, _current is updated in-place by d3.interpolate.","    function arcTween(a) {","       // debugger;","        var i = d3.interpolate(this._current, a);","        this._current = i(0);","        return function(t) {","            return arc(i(t));","        };","    }","","</script>","</body>"]},{"action":"insertText","range":{"start":{"row":114,"column":0},"end":{"row":114,"column":7}},"text":"</html>"}]}]]},"ace":{"folds":[],"scrolltop":985,"scrollleft":0,"selection":{"start":{"row":114,"column":7},"end":{"row":114,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":69,"mode":"ace/mode/javascript"}},"timestamp":1408630930000,"hash":"40f5a5fc302635cb182b49e5d57714f32e4740c9"}